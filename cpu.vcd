$date
	Sat Sep 13 23:36:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_cpu $end
$var wire 8 ! rd2 [7:0] $end
$var wire 8 " rd1 [7:0] $end
$var wire 8 # r3 [7:0] $end
$var wire 8 $ r2 [7:0] $end
$var wire 8 % r1 [7:0] $end
$var wire 8 & r0 [7:0] $end
$var wire 8 ' pc_out [7:0] $end
$var wire 8 ( instr [7:0] $end
$var wire 8 ) data_out [7:0] $end
$var wire 8 * alu_result [7:0] $end
$var reg 1 + clk $end
$var reg 1 , reset $end
$scope module uut $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var wire 2 - rs2 [1:0] $end
$var wire 2 . rs1 [1:0] $end
$var wire 8 / rd2 [7:0] $end
$var wire 8 0 rd1 [7:0] $end
$var wire 2 1 rd [1:0] $end
$var wire 8 2 r3 [7:0] $end
$var wire 8 3 r2 [7:0] $end
$var wire 8 4 r1 [7:0] $end
$var wire 8 5 r0 [7:0] $end
$var wire 8 6 pc_out [7:0] $end
$var wire 4 7 opcode [3:0] $end
$var wire 8 8 instr [7:0] $end
$var wire 8 9 data_out [7:0] $end
$var wire 8 : alu_result [7:0] $end
$scope module ALU $end
$var wire 8 ; b [7:0] $end
$var wire 4 < alu_op [3:0] $end
$var wire 8 = a [7:0] $end
$var reg 8 > result [7:0] $end
$upscope $end
$scope module CU $end
$var wire 2 ? rs2 [1:0] $end
$var wire 2 @ rs1 [1:0] $end
$var wire 2 A rd [1:0] $end
$var wire 4 B opcode [3:0] $end
$var wire 8 C instruction [7:0] $end
$upscope $end
$scope module DM $end
$var wire 8 D addr [7:0] $end
$var wire 1 + clk $end
$var wire 1 E we $end
$var wire 8 F wd [7:0] $end
$var reg 8 G rd [7:0] $end
$var integer 32 H i [31:0] $end
$upscope $end
$scope module IM $end
$var wire 8 I addr [7:0] $end
$var reg 8 J instruction [7:0] $end
$var integer 32 K i [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var reg 8 L pc [7:0] $end
$upscope $end
$scope module RF $end
$var wire 1 + clk $end
$var wire 8 M r0 [7:0] $end
$var wire 8 N r1 [7:0] $end
$var wire 8 O r2 [7:0] $end
$var wire 8 P r3 [7:0] $end
$var wire 2 Q ra1 [1:0] $end
$var wire 2 R ra2 [1:0] $end
$var wire 2 S wa [1:0] $end
$var wire 8 T wd [7:0] $end
$var wire 1 U we $end
$var reg 8 V rd1 [7:0] $end
$var reg 8 W rd2 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 W
b0 V
1U
b0 T
b0 S
b10 R
b10 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b100000000 K
b10010 J
b0 I
b100000000 H
b0 G
b0 F
0E
b0 D
b10010 C
b1 B
b0 A
b10 @
b10 ?
b0 >
b0 =
b1 <
b0 ;
b0 :
b0 9
b10010 8
b1 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b10 .
b10 -
1,
0+
b0 *
b0 )
b10010 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5000
1+
#10000
0+
0,
#15000
b11 -
b11 ?
b11 R
b11 .
b11 @
b11 Q
b10 7
b10 <
b10 B
b100011 (
b100011 8
b100011 C
b100011 J
b1 '
b1 6
b1 I
b1 L
1+
#20000
0+
#25000
b1 -
b1 ?
b1 R
b1 .
b1 @
b1 Q
b10 1
b10 A
b10 S
b1 7
b1 <
b1 B
b11001 (
b11001 8
b11001 C
b11001 J
b10 '
b10 6
b10 I
b10 L
1+
#30000
0+
#35000
b0 -
b0 ?
b0 R
b0 .
b0 @
b0 Q
b0 1
b0 A
b0 S
b0 7
b0 <
b0 B
b0 (
b0 8
b0 C
b0 J
b11 '
b11 6
b11 I
b11 L
1+
#40000
0+
#45000
b100 '
b100 6
b100 I
b100 L
1+
#50000
0+
#55000
b101 '
b101 6
b101 I
b101 L
1+
#60000
0+
#65000
b110 '
b110 6
b110 I
b110 L
1+
#70000
0+
#75000
b111 '
b111 6
b111 I
b111 L
1+
#80000
0+
#85000
b1000 '
b1000 6
b1000 I
b1000 L
1+
#90000
0+
#95000
b1001 '
b1001 6
b1001 I
b1001 L
1+
#100000
0+
#105000
b1010 '
b1010 6
b1010 I
b1010 L
1+
#110000
0+
#115000
b1011 '
b1011 6
b1011 I
b1011 L
1+
#120000
0+
#125000
b1100 '
b1100 6
b1100 I
b1100 L
1+
#130000
0+
#135000
b1101 '
b1101 6
b1101 I
b1101 L
1+
#140000
0+
#145000
b1110 '
b1110 6
b1110 I
b1110 L
1+
#150000
0+
#155000
b1111 '
b1111 6
b1111 I
b1111 L
1+
#160000
0+
#165000
b10000 '
b10000 6
b10000 I
b10000 L
1+
#170000
0+
#175000
b10001 '
b10001 6
b10001 I
b10001 L
1+
#180000
0+
#185000
b10010 '
b10010 6
b10010 I
b10010 L
1+
#190000
0+
#195000
b10011 '
b10011 6
b10011 I
b10011 L
1+
#200000
0+
#205000
b10100 '
b10100 6
b10100 I
b10100 L
1+
#210000
0+
